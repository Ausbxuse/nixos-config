################# Plugin Settings  #########################
bind-key -T copy-mode-vi WheelUpPane send -N1 -X scroll-up
bind-key -T copy-mode-vi WheelDownPane send -N1 -X scroll-down

################# KEY BINDS  #########################
unbind C-b
set -g prefix C-f

# Smart pane switching with awareness of Neovim splits.
bind -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h'  { if -F '#{pane_at_left}' "" 'select-pane -L'}
bind -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j'  { if -F '#{pane_at_bottom}' '' 'select-pane -D'}
bind -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k'  { if -F '#{pane_at_top}' '' 'select-pane -U'}
bind -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l'  { if -F '#{pane_at_right}' '' 'select-pane -R'}

# Smart pane resizing with awareness of Neovim splits.
bind -n M-H if -F "#{@pane-is-vim}" 'send-keys M-H' 'resize-pane -L 3'
bind -n M-J if -F "#{@pane-is-vim}" 'send-keys M-J' 'resize-pane -D 3'
bind -n M-K if -F "#{@pane-is-vim}" 'send-keys M-K' 'resize-pane -U 3'
bind -n M-L if -F "#{@pane-is-vim}" 'send-keys M-L' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

bind -T copy-mode-vi 'M-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind -T copy-mode-vi 'M-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind -T copy-mode-vi 'M-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind -T copy-mode-vi 'M-l' if -F '#{pane_at_right}' '' 'select-pane -R'
bind -T copy-mode-vi 'C-\' select-pane -l

bind r source-file ~/.config/tmux/tmux.conf
bind -n "M-'" switch-client -l
bind -n "M-;" last-window

bind -n M-Space run-shell "~/.local/bin/tmux/dwm.sh open"
bind Space run-shell "~/.local/bin/tmux/dwm.sh open"
bind -n M-a run-shell "~/.local/bin/tmux/dwm.sh close"
bind a run-shell "~/.local/bin/tmux/dwm.sh close"
bind -n M-Enter new-window
bind Enter new-window

bind -n M-i display-popup -E "~/.local/bin/tmux/sn"
bind i display-popup -E "~/.local/bin/tmux/sn"
bind C-i display-popup -E "~/.local/bin/tmux/sn"
bind -n M-x run-shell "~/.local/bin/tmux/stack_close.sh"
bind x run-shell "~/.local/bin/tmux/stack_close.sh"

bind C-p previous-window
bind p previous-window
bind C-n next-window
bind n next-window
bind C-f send-prefix

bind -n M-Q run-shell "~/.local/bin/tmux/move_pane2window.sh 1"
bind -n M-W run-shell "~/.local/bin/tmux/move_pane2window.sh 2"
bind -n M-E run-shell "~/.local/bin/tmux/move_pane2window.sh 3"
bind -n M-R run-shell "~/.local/bin/tmux/move_pane2window.sh 4"
bind -n M-T run-shell "~/.local/bin/tmux/move_pane2window.sh 5"
bind -n C-Q run-shell "~/.local/bin/tmux/move_pane2window.sh 1"
bind -n C-W run-shell "~/.local/bin/tmux/move_pane2window.sh 2"
bind -n C-E run-shell "~/.local/bin/tmux/move_pane2window.sh 3"
bind -n C-R run-shell "~/.local/bin/tmux/move_pane2window.sh 4"
bind -n C-T run-shell "~/.local/bin/tmux/move_pane2window.sh 5"

bind -n M-q if-shell "tmux list-windows | grep -q '^1:'" "select-window -t 1" ""
bind -n M-w if-shell "tmux list-windows | grep -q '^2:'" "select-window -t 2" ""
bind -n M-e if-shell "tmux list-windows | grep -q '^3:'" "select-window -t 3" ""
bind -n M-r if-shell "tmux list-windows | grep -q '^4:'" "select-window -t 4" ""
bind -n M-t if-shell "tmux list-windows | grep -q '^5:'" "select-window -t 5" ""
bind -r C-q if-shell "tmux list-windows | grep -q '^1:'" "select-window -t 1" ""
bind -r C-w if-shell "tmux list-windows | grep -q '^2:'" "select-window -t 2" ""
bind -r C-e if-shell "tmux list-windows | grep -q '^3:'" "select-window -t 3" ""
bind -r C-r if-shell "tmux list-windows | grep -q '^4:'" "select-window -t 4" ""
bind -r C-t if-shell "tmux list-windows | grep -q '^5:'" "select-window -t 5" ""

bind -n M-f resize-pane -Z
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-pane -L
bind -r C-j select-pane -D
bind -r C-k select-pane -U
bind -r C-l select-pane -R

bind -n PageUp copy-mode -u
bind -n PageDown copy-mode
bind -n M-, swap-pane -D       # swap current pane with the next one
bind -n M-. swap-pane -U       # swap current pane with the previous one
bind t select-layout "main-vertical"
# bind -n M-r rotate-window
bind -n M-n next
bind -n M-p prev

bind -n M-s if-shell "tmux has-session -t school 2>/dev/null" "switch-client -t school" "new-session -d -s school \; switch-client -t school"
bind -n M-f if-shell "tmux has-session -t fun 2>/dev/null" "switch-client -t fun" "new-session -d -s fun \; switch-client -t fun"

unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi 'v' send -X begin-selection     # Begin selection in copy mode.
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle  # Begin selection in copy mode.
bind-key -T copy-mode-vi 'y' send -X copy-selection      # Yank selection in copy mode.

################# General Options  #########################
set-option -g set-clipboard on
set -gq allow-passthrough on
set -gq allow-rename off
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

set -g other-pane-width "50%"
set -ga terminal-overrides ",xterm-256color:Tc"
set -g visual-activity on
set -g set-titles on
set -g set-titles-string '#H:#S.#I.#P #W #T'
# set -g renumber-windows off
setw -g xterm-keys on # for vim
setw -g monitor-activity off
setw -g automatic-rename off

## undercurl support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# support colors for undercurl
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'
