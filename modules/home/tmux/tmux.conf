################# Plugin Settings  #########################
bind-key -T copy-mode-vi WheelUpPane send -N1 -X scroll-up
bind-key -T copy-mode-vi WheelDownPane send -N1 -X scroll-down

TMUX_FZF_LAUNCH_KEY="C-g"

set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=#f4bf75,bg=default,bold' # default is 'fg=default,bg=yellow'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_sync_mode_attr 'fg=black,bg=green' # default is 'fg=default,bg=yellow'

set -g @prefix_highlight_fg '#62d8f1' # default is 'colour231'
set -g @prefix_highlight_bg 'default'  # default is 'colour04'
set -g @prefix_highlight_empty_prompt ' #[fg=#9ece6a,bg=default,bold]TMUX '
set -g @prefix_highlight_prefix_prompt '#[bold]PREV'
set -g @prefix_highlight_copy_prompt '#[bold]COPY'
set -g @prefix_highlight_sync_prompt '#[bold]SYNC'

################# KEY BINDS  #########################

unbind C-b

# Smart pane switching with awareness of Neovim splits.
bind -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h'  { if -F '#{pane_at_left}' "" 'select-pane -L'}
bind -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j'  { if -F '#{pane_at_bottom}' '' 'select-pane -D'}
bind -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k'  { if -F '#{pane_at_top}' '' 'select-pane -U'}
bind -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l'  { if -F '#{pane_at_right}' '' 'select-pane -R'}

# Smart pane resizing with awareness of Neovim splits.
bind -n M-H if -F "#{@pane-is-vim}" 'send-keys M-H' 'resize-pane -L 3'
bind -n M-J if -F "#{@pane-is-vim}" 'send-keys M-J' 'resize-pane -D 3'
bind -n M-K if -F "#{@pane-is-vim}" 'send-keys M-K' 'resize-pane -U 3'
bind -n M-L if -F "#{@pane-is-vim}" 'send-keys M-L' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

bind -T copy-mode-vi 'M-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind -T copy-mode-vi 'M-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind -T copy-mode-vi 'M-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind -T copy-mode-vi 'M-l' if -F '#{pane_at_right}' '' 'select-pane -R'
bind -T copy-mode-vi 'C-\' select-pane -l


bind r source-file ~/.config/tmux/tmux.conf
bind -n "M-'" switch-client -l
bind -n "M-;" last-window
bind s split-window -v # split pane horizontally
bind v split-window -h # split pane vertically

bind -n M-Space run-shell "~/.config/tmux/dwm.sh open"
bind Space run-shell "~/.config/tmux/dwm.sh open"
bind -n M-a run-shell "~/.config/tmux/dwm.sh close"
bind a run-shell "~/.config/tmux/dwm.sh close"
bind -n M-Enter new-window
bind Enter new-window

bind -n M-i display-popup -E "~/.config/tmux/sn"
bind i display-popup -E "~/.config/tmux/sn"
bind C-i display-popup -E "~/.config/tmux/sn"
bind -n M-x run-shell "~/.config/tmux/stack_close.sh"
bind x run-shell "~/.config/tmux/stack_close.sh"

bind C-p previous-window
bind p previous-window
bind C-n next-window
bind n next-window
bind C-f send-prefix

bind -n M-Q run-shell "~/.config/tmux/move_pane2window.sh 1"
bind -n M-W run-shell "~/.config/tmux/move_pane2window.sh 2"
bind -n M-E run-shell "~/.config/tmux/move_pane2window.sh 3"
bind -n M-R run-shell "~/.config/tmux/move_pane2window.sh 4"
bind -n M-T run-shell "~/.config/tmux/move_pane2window.sh 5"
bind -n C-Q run-shell "~/.config/tmux/move_pane2window.sh 1"
bind -n C-W run-shell "~/.config/tmux/move_pane2window.sh 2"
bind -n C-E run-shell "~/.config/tmux/move_pane2window.sh 3"
bind -n C-R run-shell "~/.config/tmux/move_pane2window.sh 4"
bind -n C-T run-shell "~/.config/tmux/move_pane2window.sh 5"

bind -n M-q if-shell "tmux list-windows | grep -q '^1:'" "select-window -t 1" ""
bind -n M-w if-shell "tmux list-windows | grep -q '^2:'" "select-window -t 2" ""
bind -n M-e if-shell "tmux list-windows | grep -q '^3:'" "select-window -t 3" ""
bind -n M-r if-shell "tmux list-windows | grep -q '^4:'" "select-window -t 4" ""
bind -n M-t if-shell "tmux list-windows | grep -q '^5:'" "select-window -t 5" ""
bind -r C-q if-shell "tmux list-windows | grep -q '^1:'" "select-window -t 1" ""
bind -r C-w if-shell "tmux list-windows | grep -q '^2:'" "select-window -t 2" ""
bind -r C-e if-shell "tmux list-windows | grep -q '^3:'" "select-window -t 3" ""
bind -r C-r if-shell "tmux list-windows | grep -q '^4:'" "select-window -t 4" ""
bind -r C-t if-shell "tmux list-windows | grep -q '^5:'" "select-window -t 5" ""

bind -n M-f resize-pane -Z
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-pane -L
bind -r C-j select-pane -D
bind -r C-k select-pane -U
bind -r C-l select-pane -R

bind -n PageUp copy-mode -u
bind -n PageDown copy-mode
bind -n M-, swap-pane -D       # swap current pane with the next one
bind -n M-. swap-pane -U       # swap current pane with the previous one
bind t select-layout "main-vertical"
# bind -n M-r rotate-window
bind -n M-n next
bind -n M-p prev

bind -n M-s if-shell "tmux has-session -t school 2>/dev/null" "switch-client -t school" "new-session -d -s school \; switch-client -t school"
bind -n M-m if-shell "tmux has-session -t main 2>/dev/null" "switch-client -t main" "new-session -d -s main \; switch-client -t main"

unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi 'v' send -X begin-selection     # Begin selection in copy mode.
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle  # Begin selection in copy mode.
bind-key -T copy-mode-vi 'y' send -X copy-selection      # Yank selection in copy mode.

################# General Options  #########################
set-option -g set-clipboard on
set -gq allow-passthrough on
set -gq allow-rename off
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

set -g prefix C-f
set -g other-pane-width "50%"
set -ga terminal-overrides ",xterm-256color:Tc"
set -g visual-activity on
set -g set-titles on
set -g set-titles-string '#H:#S.#I.#P #W #T'
# set -g renumber-windows off
setw -g xterm-keys on # for vim
setw -g monitor-activity off
setw -g automatic-rename off

################################# Status bar ###################################
set -g status-interval 60         # update the status bar every 10 seconds
set -g status-justify centre
set -g status-position top
set -g status-style 'bg=default'  # transparent background
set -g status-left-length 50
set -g status-right-length 70
# setw -g window-status-separator ''
set -g status-bg 'default'
set -g status-left '#{prefix_highlight}#[fg=#2b2a30,bg=default]#[fg=#b4befe,bg=default]#S#[fg=#2b2a30,bg=default] #[fg=#dfdcd8,bg=default]#(~/.config/tmux/truncate_path.sh #{pane_current_path})'

# set -g status-right '#[fg=#4fc1ff,bg=default,bold]#{?window_zoomed_flag,+, }#[fg=#daeafa,nobold]%H:%M #[bg=default]'
set -g status-right '#[fg=#4fc1ff,bg=default,bold]#{?window_zoomed_flag,+, }#[fg=#b4befe,bold]#[nobold] #[nobold]#(duo status)#(cpu) #(memory) #[bg=default]#(battery) #[fg=#a9b1d6,bg=default,nobold,noitalics]#(forecast) #[fg=#daeafa,nobold]%H:%M #[bg=default]'
set -g window-status-current-style 'fg=#89ddff,bg=default'
set -g window-status-format '#[fg=#5c626e,bg=default,italics]#I: #[fg=#5c626e,bg=default,noitalics,bold]#W#[fg=#2b2a30,bg=default] '
set -g window-status-current-format '#[fg=#ae81ff,bg=default,]#[italics]#I: #[fg=#dfdcd8,bg=default]#[bold,noitalics]#W#[fg=#2b2a30,bg=default] '
set -g window-status-last-style 'fg=#a9b1d6,bg=default'
set -g window-status-activity-style 'fg=#9ece6a,bg=default'
set -g pane-border-style 'fg=#b4befe'
set -g pane-active-border-style 'fg=#b4befe'
set -g message-command-style "bg=default,fg=#a9b1d6"
set -g message-style "bg=default,fg=#a9b1d6"
set -g mode-style "bg=#292e42"


## undercurl support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# support colors for undercurl
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

run-shell '~/.config/tmux/plugins/tmux-sensible/sensible.tmux'
run-shell '~/.config/tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux'

resurrect_dir="$HOME/.local/share/tmux/resurrect"
set -g @resurrect-dir $resurrect_dir
set -g @resurrect-hook-post-save-all 'target=$(readlink -f $HOME/.local/share/tmux/resurrect/last); sed "s|\(.*bin/nvim\) .*|\1|; s|/etc/profiles/per-user/$USER/bin/||g; s|/home/$USER/.nix-profile/bin/||g" $target | sponge $target'
set -g @resurrect-capture-pane-contents 'on'
# set -g @resurrect-hook-post-save-all "sed 's/--cmd[^ ]* [^ ]* [^ ]*//g' $resurrect_dir/last | sponge $resurrect_dir/last"
# set -g @resurrect-processes '"~nvim"'
set -g @resurrect-processes '~yazi' '~gdu' '~nvim'
# set -g @resurrect-processes ':all:'

run-shell '~/.config/tmux/plugins/tmux-resurrect/resurrect.tmux'

# Restore environment automatically
set -g @continuum-restore 'on'
# set -g @continuum-boot 'on'
# set -g @continuum-boot-options 'ghostty'
set -g @continuum-save-interval '5'
# set -g @continuum-systemd-start-cmd 'start-server'


run-shell '~/.config/tmux/plugins/tmux-continuum/continuum.tmux'
