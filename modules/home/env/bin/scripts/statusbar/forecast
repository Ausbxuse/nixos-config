#!/usr/bin/env bash

# Displays today's precipitation chance (☔), and daily low (🥶) and high (🌞).

url="${WTTRURL:-wttr.in}"
weatherreport="${XDG_CACHE_HOME:-$HOME/.cache}/weatherreport"
weatherreport_min="${XDG_CACHE_HOME:-$HOME/.cache}/weatherreport_min"
moonphase="${XDG_CACHE_HOME:-$HOME/.cache}/moonphase"

# Get a weather report from 'wttr.in' and save it locally.
getforecast() {
	if [ ! -s "$weatherreport" ] || [ "$(($(date +%s) - $(stat -c %Y "$weatherreport")))" -gt 5400 ]; then
		timeout --signal=1 2s curl -sf "$url/$LOCATION?m" >"$weatherreport" || exit 1
	fi
}

getforecast-min() {
	if [ ! -s "$weatherreport_min" ] || [ "$(($(date +%s) - $(stat -c %Y "$weatherreport_min")))" -gt 5400 ]; then
		timeout --signal=1 2s curl -sf "$url/$LOCATION?m&format=1" >"$weatherreport_min" || exit 1
	fi
}

getmoonphase() {
	if [ ! -s "$moonphase" ] || [ "$(($(date +%s) - $(stat -c %Y "$moonphase")))" -gt 5400 ]; then
		timeout --signal=1 2s curl -sf "$url/$LOCATION?m&format=%m" >"$moonphase" || exit 1
	fi
}

getprecipchance() {
	echo "$weatherdata" | sed '16q;d' | # Extract line 16 from file
		grep -wo "[0-9]*%" |               # Find a sequence of digits followed by '%'
		sort -rn |                         # Sort in descending order
		head -n 1                          # Extract first line
}

getdailyhighlow() {
	echo "$weatherdata" | sed '13q;d' | # Extract line 13 from file
		grep -o "m\\([-+]\\)*[0-9]\\+" |   # Find temperatures in the format "m<signed number>"
		sed 's/[+m]//g' |                  # Remove '+' and 'm'
		sort -g |                          # Sort in ascending order
		awk '{ sum += $1; n++ } END { mean = int((sum/n) + 0.5); diff = mean - $1; if(diff < 0) diff = -diff; print mean "󰦒" int(diff + 0.5) }'
}

getweathericon() {
	echo "$weatherdata_min" | awk '{print $1}'
}

showmoonphase() {
	echo "$moonphasedata"
}

readfile() {
	weatherdata="$(cat "$weatherreport")"
	weatherdata_min="$(cat "$weatherreport_min")"
	moonphasedata="$(cat "$moonphase")"
}

#
showweather() {
	readfile
	printf "%s%s° %s\n" "$(getweathericon)" "$(getdailyhighlow)" "$(showmoonphase)"
}

# Forecast and moon phase are updated only if the cache is older than 90 minutes.
getforecast
getforecast-min
getmoonphase

showweather
